scalar DateTime

type UserProjects {
  userId: Int!
  projectId: Int!
}

type User {
  id: Int!
  name: String!
  surname: String!
  username: String!
  email: String!
  password: String
  createdAt: DateTime!
  projects: [UserProjects]
}

input CreateUserInput {
  name: String!
  surname: String!
  username: String!
  email: String
  password: String
  createdAt: DateTime
}

input UpdateUserInput {
  id: Int!
  name: String!
  surname: String!
  username: String!
  email: String
  password: String
  createdAt: DateTime
}

type UserProjectsResponse {
  userId: Int!
  projectId: Int!
  project: Project
}

type Query {
  users: [User]!
  user(id: Int!): User
  userProjects(userId: Int!): [UserProjectsResponse]
}

type Mutation {
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User
}
